---
layout: post
title:  "Ch.5 형식 맞추기"
date:   2019-09-01 21:03:36 +0530
categories: CleanCode 코드형식
---
-- 코드 형식은 의사소통의 일환이다. 코드 형식을 맞추기 위해 간단한 규칙을 정하고 그 규칙을 지키며 깔끔한 코드를 작성해야 한다. 그런 코드는 가독성이 좋으며 앞으로 바뀔 코드의 품질과 유지보수에 영향을 미친다.

지금부터 원활한 소통을 장려하는 코드 형식에 대해 설명한다.

**\# 적절한 행 길이를 유지하라**
 큰 파일보다 작은 파일이 이해하기 쉽다. 프로젝트 7개의 자바 소스 파일을 조사한 결과 200줄 정도로도 커다란 시스템을 구축할 수 있다는 것이다. Tomcat과 Ant와 같은 큰 프로젝트를 제외하면 65줄이 평균이다.

1. 신문 기사처럼 작성하라
	- 신문 기사를 요약한 '표제'처럼 소스 파일 이름을 간단하면서 설명이 가능하게 짓는다. 기사의 '첫 문단'처럼 소스파일 첫 부분은 고차원 개념과 알고리즘을 설명한다. 아래로 내려갈수록 의도를 세세하게 묘사한다.

2. 개념은 빈 행으로 분리하라

3. 세로 밀집도
	- 서로 밀접한 코드 행은 세로로 가까이 놓여야 한다. 

4. 수직 거리
	- **변수 선언** : 변수는 사용하는 위치에 최대한 가까이 선언한다. 지역변수, 루프 제어 변수는 내부 첫 줄에 선언한다.
 	- **인스턴스 변수** : 인스턴스 변수는 클래스 맨 처음에 선언한다.
 	- **종속 함수** : 호출하는 함수를 호출되는 함수보다 먼저 배치한다. 두 함수는 세로로 가까이 배치한다.
 	- **개념적 유사성** : 개념적인 친화도가 높을수록 코드를 가까이 배치한다.
 	- 친화도를 높이는 요인 : 직접적인 종속(함수 호출), 비슷한 기능을 가진 함수

5. 세로 순서
 - 호출하는 함수를 호출되는 함수보다 먼저 배치한다. 중요한 개념을 먼저 표현하고 세세한 사항은 마지막에 표현한다. (고차원->저차원)
 
**\# 가로 형식 맞추기**
 짧은 행이 바람직하다. 저자는 120자 미만의 행 길이를 제한한다.

